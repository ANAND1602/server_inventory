---
- name: Install Server Inventory Management System
  hosts: rhel_servers
  become: yes
  vars:
    app_name: server-inventory
    app_user: inventory
    app_dir: /opt/server_inventory
    backup_dir: /opt/backups/server_inventory
    log_dir: /var/log/server_inventory
    python_version: python3
    
  tasks:
    - name: Update system packages
      dnf:
        name: "*"
        state: latest
        
    - name: Install required packages
      dnf:
        name:
          - python3
          - python3-pip
          - python3-venv
          - git
          - nginx
          - firewalld
          - policycoreutils-python-utils
        state: present
        
    - name: Create application user
      user:
        name: "{{ app_user }}"
        system: yes
        shell: /bin/false
        home: "{{ app_dir }}"
        create_home: no
        
    - name: Create application directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'
      loop:
        - "{{ app_dir }}"
        - "{{ backup_dir }}"
        - "{{ log_dir }}"
        
    - name: Copy application files
      copy:
        src: ../
        dest: "{{ app_dir }}/"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: preserve
        
    - name: Create Python virtual environment
      command: "{{ python_version }} -m venv {{ app_dir }}/venv"
      become_user: "{{ app_user }}"
      args:
        creates: "{{ app_dir }}/venv"
        
    - name: Install Python dependencies
      pip:
        requirements: "{{ app_dir }}/requirements.txt"
        virtualenv: "{{ app_dir }}/venv"
      become_user: "{{ app_user }}"
      
    - name: Configure firewall
      firewalld:
        port: "{{ item }}"
        permanent: yes
        state: enabled
        immediate: yes
      loop:
        - 5000/tcp
        - 80/tcp
        - 443/tcp
        
    - name: Configure SELinux booleans
      seboolean:
        name: httpd_can_network_connect
        state: yes
        persistent: yes
        
    - name: Add SELinux port context
      seport:
        ports: 5000
        proto: tcp
        setype: http_port_t
        state: present
        
    - name: Set SELinux file contexts
      sefcontext:
        target: "{{ app_dir }}/venv/bin/python3"
        setype: httpd_exec_t
        state: present
      notify: restore selinux contexts
      
    - name: Install systemd service
      template:
        src: server-inventory.service.j2
        dest: /etc/systemd/system/server-inventory.service
        mode: '0644'
      notify:
        - reload systemd
        - restart server-inventory
        
    - name: Configure Nginx
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/conf.d/server-inventory.conf
        mode: '0644'
      notify: restart nginx
      
    - name: Configure log rotation
      template:
        src: logrotate.j2
        dest: /etc/logrotate.d/server-inventory
        mode: '0644'
        
    - name: Create backup script
      template:
        src: backup.sh.j2
        dest: "{{ app_dir }}/backup.sh"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'
        
    - name: Setup backup cron job
      cron:
        name: "Server Inventory Backup"
        minute: "0"
        hour: "2"
        user: "{{ app_user }}"
        job: "{{ app_dir }}/backup.sh"
        
    - name: Start and enable services
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - firewalld
        - server-inventory
        - nginx
        
  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes
        
    - name: restart server-inventory
      systemd:
        name: server-inventory
        state: restarted
        
    - name: restart nginx
      systemd:
        name: nginx
        state: restarted
        
    - name: restore selinux contexts
      command: restorecon -Rv {{ app_dir }}/